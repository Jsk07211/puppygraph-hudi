services:
  postgres:
    image: postgres:16-alpine
    networks:
      hudi_net:
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: metastore
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d metastore"]
      interval: 3s
      timeout: 5s
      retries: 20
  metastore:
    image: apache/hive:4.0.0
    networks:
      hudi_net:
    volumes:
      - ./jars/postgresql-42.7.3.jar:/opt/hive/lib/postgresql-42.7.3.jar:ro
    depends_on:
      - postgres
    command: >
      bash -lc '
        schematool -dbType postgres -initSchema --verbose \
          --hiveconf javax.jdo.option.ConnectionURL=jdbc:postgresql://postgres:5432/metastore \
          --hiveconf javax.jdo.option.ConnectionDriverName=org.postgresql.Driver \
          --hiveconf javax.jdo.option.ConnectionUserName=postgres \
          --hiveconf javax.jdo.option.ConnectionPassword=postgres123 \
          || true;
        exec /opt/hive/bin/hive --service metastore -p 9083 \
          --hiveconf javax.jdo.option.ConnectionURL=jdbc:postgresql://postgres:5432/metastore \
          --hiveconf javax.jdo.option.ConnectionDriverName=org.postgresql.Driver \
          --hiveconf javax.jdo.option.ConnectionUserName=postgres \
          --hiveconf javax.jdo.option.ConnectionPassword=postgres123
      '
  minio:
    image: minio/minio
    container_name: minio
    networks:
      hudi_net:
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]
  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    networks:
      hudi_net:
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc anonymous set public minio/warehouse;
      tail -f /dev/null
      "
  spark:
    image: apache/spark:3.5.6
    volumes:
      - ./spark-conf/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf:ro
      - ./parquet_data:/parquet_data:ro
      - ./init.sql:/init.sql:ro
    networks:
      hudi_net:
    environment:
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: password
    depends_on:
      - metastore
      - minio
    command: ["bash", "-lc", "tail -f /dev/null"]
  puppygraph:
    image: puppygraph/puppygraph:stable
    container_name: puppygraph
    environment:
      - PUPPYGRAPH_USERNAME=puppygraph
      - PUPPYGRAPH_PASSWORD=puppygraph123
    ports:
      - "8081:8081"
      - "8182:8182"
      - "7687:7687"
networks:
  hudi_net:
    name: puppy-hudi